var annotated_dup =
[
    [ "detail", "namespacedetail.html", [
      [ "dragonbox", "namespacedetail_1_1dragonbox.html", [
        [ "cache_accessor", "structdetail_1_1dragonbox_1_1cache__accessor.html", null ],
        [ "cache_accessor< float >", "structdetail_1_1dragonbox_1_1cache__accessor_3_01float_01_4.html", "structdetail_1_1dragonbox_1_1cache__accessor_3_01float_01_4" ],
        [ "cache_accessor< double >", "structdetail_1_1dragonbox_1_1cache__accessor_3_01double_01_4.html", "structdetail_1_1dragonbox_1_1cache__accessor_3_01double_01_4" ]
      ] ],
      [ "is_reference_wrapper", "structdetail_1_1is__reference__wrapper.html", null ],
      [ "is_reference_wrapper< std::reference_wrapper< T > >", "structdetail_1_1is__reference__wrapper_3_01std_1_1reference__wrapper_3_01_t_01_4_01_4.html", null ],
      [ "dynamic_arg_list", "classdetail_1_1dynamic__arg__list.html", "classdetail_1_1dynamic__arg__list" ],
      [ "null", "structdetail_1_1null.html", null ],
      [ "codecvt_result", "structdetail_1_1codecvt__result.html", "structdetail_1_1codecvt__result" ],
      [ "truncating_iterator_base", "classdetail_1_1truncating__iterator__base.html", "classdetail_1_1truncating__iterator__base" ],
      [ "truncating_iterator", "classdetail_1_1truncating__iterator.html", null ],
      [ "truncating_iterator< OutputIt, std::false_type >", "classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4.html", "classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1false__type_01_4" ],
      [ "truncating_iterator< OutputIt, std::true_type >", "classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1true__type_01_4.html", "classdetail_1_1truncating__iterator_3_01_output_it_00_01std_1_1true__type_01_4" ],
      [ "compiled_string", "classdetail_1_1compiled__string.html", null ],
      [ "is_compiled_string", "structdetail_1_1is__compiled__string.html", null ],
      [ "singleton", "structdetail_1_1singleton.html", "structdetail_1_1singleton" ],
      [ "string_literal", "structdetail_1_1string__literal.html", "structdetail_1_1string__literal" ],
      [ "formatbuf", "classdetail_1_1formatbuf.html", "classdetail_1_1formatbuf" ],
      [ "uint128_fallback", "classdetail_1_1uint128__fallback.html", "classdetail_1_1uint128__fallback" ],
      [ "is_streamable", "classdetail_1_1is__streamable.html", "classdetail_1_1is__streamable" ],
      [ "is_streamable< T, Char, enable_if_t< std::is_arithmetic< T >::value||std::is_array< T >::value||std::is_pointer< T >::value||std::is_same< T, char8_type >::value||std::is_convertible< T, fmt::basic_string_view< Char > >::value||std::is_same< T, std_string_view< Char > >::value||(std::is_convertible< T, int >::value &&!std::is_enum< T >::value)> >", "structdetail_1_1is__streamable_3_01_t_00_01_char_00_01enable__if__t_3_01std_1_1is__arithmetic_3_bc0b1f731ff3d9ab9d28f3bb9a486c4c.html", null ],
      [ "file_access", "classdetail_1_1file__access.html", "classdetail_1_1file__access" ],
      [ "streamed_view", "structdetail_1_1streamed__view.html", "structdetail_1_1streamed__view" ],
      [ "fallback_formatter< T, Char, enable_if_t< is_streamable< T, Char >::value > >", "structdetail_1_1fallback__formatter_3_01_t_00_01_char_00_01enable__if__t_3_01is__streamable_3_0116a9df8564c2d9e12499cd5b72786d7c.html", null ],
      [ "is_std_string_like", "classdetail_1_1is__std__string__like.html", null ],
      [ "is_std_string_like< fmt::basic_string_view< Char > >", "structdetail_1_1is__std__string__like_3_01fmt_1_1basic__string__view_3_01_char_01_4_01_4.html", null ],
      [ "is_map", "classdetail_1_1is__map.html", null ],
      [ "is_set", "classdetail_1_1is__set.html", null ],
      [ "conditional_helper", "structdetail_1_1conditional__helper.html", null ],
      [ "is_range_", "structdetail_1_1is__range__.html", null ],
      [ "has_member_fn_begin_end_t", "structdetail_1_1has__member__fn__begin__end__t.html", null ],
      [ "has_member_fn_begin_end_t< T, void_t< decltype(std::declval< T >().begin()), decltype(std::declval< T >().end())> >", "structdetail_1_1has__member__fn__begin__end__t_3_01_t_00_01void__t_3_01decltype_07std_1_1declval2d279443b63d262c3d0c3ea7654a8b24.html", null ],
      [ "has_const_begin_end", "structdetail_1_1has__const__begin__end.html", null ],
      [ "has_mutable_begin_end", "structdetail_1_1has__mutable__begin__end.html", null ],
      [ "has_const_begin_end< T, void_t< decltype(detail::range_begin(std::declval< const remove_cvref_t< T > & >())), decltype(detail::range_end(std::declval< const remove_cvref_t< T > & >()))> >", "structdetail_1_1has__const__begin__end_3_01_t_00_01void__t_3_01decltype_07detail_1_1range__begin4d0cf3c56adb617747d1750d2b5598ac.html", null ],
      [ "has_mutable_begin_end< T, void_t< decltype(detail::range_begin(std::declval< T >())), decltype(detail::range_end(std::declval< T >())), enable_if_t< std::is_copy_constructible< T >::value > > >", "structdetail_1_1has__mutable__begin__end_3_01_t_00_01void__t_3_01decltype_07detail_1_1range__begd5f2729531552232d214cda8da44d539.html", null ],
      [ "is_range_< T, void >", "structdetail_1_1is__range___3_01_t_00_01void_01_4.html", null ],
      [ "is_tuple_like_", "classdetail_1_1is__tuple__like__.html", null ],
      [ "integer_sequence", "structdetail_1_1integer__sequence.html", "structdetail_1_1integer__sequence" ],
      [ "make_integer_sequence", "structdetail_1_1make__integer__sequence.html", null ],
      [ "make_integer_sequence< T, 0, Ns... >", "structdetail_1_1make__integer__sequence_3_01_t_00_010_00_01_ns_8_8_8_01_4.html", null ],
      [ "is_tuple_formattable_", "classdetail_1_1is__tuple__formattable__.html", null ],
      [ "is_tuple_formattable_< T, C, true >", "classdetail_1_1is__tuple__formattable___3_01_t_00_01_c_00_01true_01_4.html", null ],
      [ "range_mapper", "structdetail_1_1range__mapper.html", "structdetail_1_1range__mapper" ],
      [ "is_formattable_delayed", "structdetail_1_1is__formattable__delayed.html", null ],
      [ "range_format_kind_", "structdetail_1_1range__format__kind__.html", null ],
      [ "range_default_formatter", "structdetail_1_1range__default__formatter.html", null ],
      [ "range_default_formatter< K, R, Char, enable_if_t<(K==range_format::sequence||K==range_format::map||K==range_format::set)> >", "structdetail_1_1range__default__formatter_3_01_k_00_01_r_00_01_char_00_01enable__if__t_3_07_k_0a16708de8f3126c16f8d4d6b0d6029b33.html", "structdetail_1_1range__default__formatter_3_01_k_00_01_r_00_01_char_00_01enable__if__t_3_07_k_0a16708de8f3126c16f8d4d6b0d6029b33" ]
    ] ],
    [ "dragonbox", "namespacedragonbox.html", [
      [ "float_info", "structdragonbox_1_1float__info.html", null ],
      [ "float_info< float >", "structdragonbox_1_1float__info_3_01float_01_4.html", "structdragonbox_1_1float__info_3_01float_01_4" ],
      [ "float_info< double >", "structdragonbox_1_1float__info_3_01double_01_4.html", "structdragonbox_1_1float__info_3_01double_01_4" ],
      [ "float_info< T, enable_if_t< std::numeric_limits< T >::digits==64||std::numeric_limits< T >::digits==113||is_float128< T >::value > >", "structdragonbox_1_1float__info_3_01_t_00_01enable__if__t_3_01std_1_1numeric__limits_3_01_t_01_4_4ad7b4cb4a466ca2ac994b2f626f3574.html", "structdragonbox_1_1float__info_3_01_t_00_01enable__if__t_3_01std_1_1numeric__limits_3_01_t_01_4_4ad7b4cb4a466ca2ac994b2f626f3574" ],
      [ "float_info< T, enable_if_t< is_double_double< T >::value > >", "structdragonbox_1_1float__info_3_01_t_00_01enable__if__t_3_01is__double__double_3_01_t_01_4_1_1value_01_4_01_4.html", "structdragonbox_1_1float__info_3_01_t_00_01enable__if__t_3_01is__double__double_3_01_t_01_4_1_1value_01_4_01_4" ],
      [ "decimal_fp", "structdragonbox_1_1decimal__fp.html", "structdragonbox_1_1decimal__fp" ]
    ] ],
    [ "fmt", "namespacefmt.html", [
      [ "formatter< spdlog::details::dump_info< T >, char >", "structfmt_1_1formatter_3_01spdlog_1_1details_1_1dump__info_3_01_t_01_4_00_01char_01_4.html", "structfmt_1_1formatter_3_01spdlog_1_1details_1_1dump__info_3_01_t_01_4_00_01char_01_4" ],
      [ "formatter< spdlog::stopwatch >", "structfmt_1_1formatter_3_01spdlog_1_1stopwatch_01_4.html", "structfmt_1_1formatter_3_01spdlog_1_1stopwatch_01_4" ]
    ] ],
    [ "spdlog", "namespacespdlog.html", [
      [ "details", "namespacespdlog_1_1details.html", [
        [ "backtracer", "classspdlog_1_1details_1_1backtracer.html", "classspdlog_1_1details_1_1backtracer" ],
        [ "circular_q", "classspdlog_1_1details_1_1circular__q.html", "classspdlog_1_1details_1_1circular__q" ],
        [ "console_mutex", "structspdlog_1_1details_1_1console__mutex.html", "structspdlog_1_1details_1_1console__mutex" ],
        [ "console_nullmutex", "structspdlog_1_1details_1_1console__nullmutex.html", "structspdlog_1_1details_1_1console__nullmutex" ],
        [ "file_helper", "classspdlog_1_1details_1_1file__helper.html", "classspdlog_1_1details_1_1file__helper" ],
        [ "log_msg", "structspdlog_1_1details_1_1log__msg.html", "structspdlog_1_1details_1_1log__msg" ],
        [ "log_msg_buffer", "classspdlog_1_1details_1_1log__msg__buffer.html", "classspdlog_1_1details_1_1log__msg__buffer" ],
        [ "mpmc_blocking_queue", "classspdlog_1_1details_1_1mpmc__blocking__queue.html", "classspdlog_1_1details_1_1mpmc__blocking__queue" ],
        [ "null_mutex", "structspdlog_1_1details_1_1null__mutex.html", "structspdlog_1_1details_1_1null__mutex" ],
        [ "null_atomic_int", "structspdlog_1_1details_1_1null__atomic__int.html", "structspdlog_1_1details_1_1null__atomic__int" ],
        [ "periodic_worker", "classspdlog_1_1details_1_1periodic__worker.html", "classspdlog_1_1details_1_1periodic__worker" ],
        [ "registry", "classspdlog_1_1details_1_1registry.html", "classspdlog_1_1details_1_1registry" ],
        [ "tcp_client", "classspdlog_1_1details_1_1tcp__client.html", "classspdlog_1_1details_1_1tcp__client" ],
        [ "async_msg", "structspdlog_1_1details_1_1async__msg.html", "structspdlog_1_1details_1_1async__msg" ],
        [ "thread_pool", "classspdlog_1_1details_1_1thread__pool.html", "classspdlog_1_1details_1_1thread__pool" ],
        [ "udp_client", "classspdlog_1_1details_1_1udp__client.html", "classspdlog_1_1details_1_1udp__client" ],
        [ "dump_info", "classspdlog_1_1details_1_1dump__info.html", "classspdlog_1_1details_1_1dump__info" ],
        [ "scoped_padder", "classspdlog_1_1details_1_1scoped__padder.html", "classspdlog_1_1details_1_1scoped__padder" ],
        [ "null_scoped_padder", "structspdlog_1_1details_1_1null__scoped__padder.html", "structspdlog_1_1details_1_1null__scoped__padder" ],
        [ "name_formatter", "classspdlog_1_1details_1_1name__formatter.html", "classspdlog_1_1details_1_1name__formatter" ],
        [ "level_formatter", "classspdlog_1_1details_1_1level__formatter.html", "classspdlog_1_1details_1_1level__formatter" ],
        [ "short_level_formatter", "classspdlog_1_1details_1_1short__level__formatter.html", "classspdlog_1_1details_1_1short__level__formatter" ],
        [ "a_formatter", "classspdlog_1_1details_1_1a__formatter.html", "classspdlog_1_1details_1_1a__formatter" ],
        [ "A_formatter", "classspdlog_1_1details_1_1_a__formatter.html", "classspdlog_1_1details_1_1_a__formatter" ],
        [ "b_formatter", "classspdlog_1_1details_1_1b__formatter.html", "classspdlog_1_1details_1_1b__formatter" ],
        [ "B_formatter", "classspdlog_1_1details_1_1_b__formatter.html", "classspdlog_1_1details_1_1_b__formatter" ],
        [ "c_formatter", "classspdlog_1_1details_1_1c__formatter.html", "classspdlog_1_1details_1_1c__formatter" ],
        [ "C_formatter", "classspdlog_1_1details_1_1_c__formatter.html", "classspdlog_1_1details_1_1_c__formatter" ],
        [ "D_formatter", "classspdlog_1_1details_1_1_d__formatter.html", "classspdlog_1_1details_1_1_d__formatter" ],
        [ "Y_formatter", "classspdlog_1_1details_1_1_y__formatter.html", "classspdlog_1_1details_1_1_y__formatter" ],
        [ "m_formatter", "classspdlog_1_1details_1_1m__formatter.html", "classspdlog_1_1details_1_1m__formatter" ],
        [ "d_formatter", "classspdlog_1_1details_1_1d__formatter.html", "classspdlog_1_1details_1_1d__formatter" ],
        [ "H_formatter", "classspdlog_1_1details_1_1_h__formatter.html", "classspdlog_1_1details_1_1_h__formatter" ],
        [ "I_formatter", "classspdlog_1_1details_1_1_i__formatter.html", "classspdlog_1_1details_1_1_i__formatter" ],
        [ "M_formatter", "classspdlog_1_1details_1_1_m__formatter.html", "classspdlog_1_1details_1_1_m__formatter" ],
        [ "S_formatter", "classspdlog_1_1details_1_1_s__formatter.html", "classspdlog_1_1details_1_1_s__formatter" ],
        [ "e_formatter", "classspdlog_1_1details_1_1e__formatter.html", "classspdlog_1_1details_1_1e__formatter" ],
        [ "f_formatter", "classspdlog_1_1details_1_1f__formatter.html", "classspdlog_1_1details_1_1f__formatter" ],
        [ "F_formatter", "classspdlog_1_1details_1_1_f__formatter.html", "classspdlog_1_1details_1_1_f__formatter" ],
        [ "E_formatter", "classspdlog_1_1details_1_1_e__formatter.html", "classspdlog_1_1details_1_1_e__formatter" ],
        [ "p_formatter", "classspdlog_1_1details_1_1p__formatter.html", "classspdlog_1_1details_1_1p__formatter" ],
        [ "r_formatter", "classspdlog_1_1details_1_1r__formatter.html", "classspdlog_1_1details_1_1r__formatter" ],
        [ "R_formatter", "classspdlog_1_1details_1_1_r__formatter.html", "classspdlog_1_1details_1_1_r__formatter" ],
        [ "T_formatter", "classspdlog_1_1details_1_1_t__formatter.html", "classspdlog_1_1details_1_1_t__formatter" ],
        [ "z_formatter", "classspdlog_1_1details_1_1z__formatter.html", "classspdlog_1_1details_1_1z__formatter" ],
        [ "t_formatter", "classspdlog_1_1details_1_1t__formatter.html", "classspdlog_1_1details_1_1t__formatter" ],
        [ "pid_formatter", "classspdlog_1_1details_1_1pid__formatter.html", "classspdlog_1_1details_1_1pid__formatter" ],
        [ "v_formatter", "classspdlog_1_1details_1_1v__formatter.html", "classspdlog_1_1details_1_1v__formatter" ],
        [ "ch_formatter", "classspdlog_1_1details_1_1ch__formatter.html", "classspdlog_1_1details_1_1ch__formatter" ],
        [ "aggregate_formatter", "classspdlog_1_1details_1_1aggregate__formatter.html", "classspdlog_1_1details_1_1aggregate__formatter" ],
        [ "color_start_formatter", "classspdlog_1_1details_1_1color__start__formatter.html", "classspdlog_1_1details_1_1color__start__formatter" ],
        [ "color_stop_formatter", "classspdlog_1_1details_1_1color__stop__formatter.html", "classspdlog_1_1details_1_1color__stop__formatter" ],
        [ "source_location_formatter", "classspdlog_1_1details_1_1source__location__formatter.html", "classspdlog_1_1details_1_1source__location__formatter" ],
        [ "source_filename_formatter", "classspdlog_1_1details_1_1source__filename__formatter.html", "classspdlog_1_1details_1_1source__filename__formatter" ],
        [ "short_filename_formatter", "classspdlog_1_1details_1_1short__filename__formatter.html", "classspdlog_1_1details_1_1short__filename__formatter" ],
        [ "source_linenum_formatter", "classspdlog_1_1details_1_1source__linenum__formatter.html", "classspdlog_1_1details_1_1source__linenum__formatter" ],
        [ "source_funcname_formatter", "classspdlog_1_1details_1_1source__funcname__formatter.html", "classspdlog_1_1details_1_1source__funcname__formatter" ],
        [ "elapsed_formatter", "classspdlog_1_1details_1_1elapsed__formatter.html", "classspdlog_1_1details_1_1elapsed__formatter" ],
        [ "full_formatter", "classspdlog_1_1details_1_1full__formatter.html", "classspdlog_1_1details_1_1full__formatter" ],
        [ "padding_info", "structspdlog_1_1details_1_1padding__info.html", "structspdlog_1_1details_1_1padding__info" ],
        [ "flag_formatter", "classspdlog_1_1details_1_1flag__formatter.html", "classspdlog_1_1details_1_1flag__formatter" ]
      ] ],
      [ "sinks", "namespacespdlog_1_1sinks.html", [
        [ "win_eventlog", "namespacespdlog_1_1sinks_1_1win__eventlog.html", [
          [ "internal", "namespacespdlog_1_1sinks_1_1win__eventlog_1_1internal.html", [
            [ "local_alloc_t", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1local__alloc__t.html", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1local__alloc__t" ],
            [ "win32_error", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1win32__error.html", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1win32__error" ],
            [ "sid_t", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1sid__t.html", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1sid__t" ],
            [ "eventlog", "structspdlog_1_1sinks_1_1win__eventlog_1_1internal_1_1eventlog.html", null ]
          ] ],
          [ "win_eventlog_sink", "classspdlog_1_1sinks_1_1win__eventlog_1_1win__eventlog__sink.html", "classspdlog_1_1sinks_1_1win__eventlog_1_1win__eventlog__sink" ]
        ] ],
        [ "ansicolor_sink", "classspdlog_1_1sinks_1_1ansicolor__sink.html", "classspdlog_1_1sinks_1_1ansicolor__sink" ],
        [ "ansicolor_stdout_sink", "classspdlog_1_1sinks_1_1ansicolor__stdout__sink.html", "classspdlog_1_1sinks_1_1ansicolor__stdout__sink" ],
        [ "ansicolor_stderr_sink", "classspdlog_1_1sinks_1_1ansicolor__stderr__sink.html", "classspdlog_1_1sinks_1_1ansicolor__stderr__sink" ],
        [ "base_sink", "classspdlog_1_1sinks_1_1base__sink.html", "classspdlog_1_1sinks_1_1base__sink" ],
        [ "basic_file_sink", "classspdlog_1_1sinks_1_1basic__file__sink.html", "classspdlog_1_1sinks_1_1basic__file__sink" ],
        [ "callback_sink", "classspdlog_1_1sinks_1_1callback__sink.html", "classspdlog_1_1sinks_1_1callback__sink" ],
        [ "daily_filename_calculator", "structspdlog_1_1sinks_1_1daily__filename__calculator.html", null ],
        [ "daily_filename_format_calculator", "structspdlog_1_1sinks_1_1daily__filename__format__calculator.html", null ],
        [ "daily_file_sink", "classspdlog_1_1sinks_1_1daily__file__sink.html", "classspdlog_1_1sinks_1_1daily__file__sink" ],
        [ "dist_sink", "classspdlog_1_1sinks_1_1dist__sink.html", "classspdlog_1_1sinks_1_1dist__sink" ],
        [ "dup_filter_sink", "classspdlog_1_1sinks_1_1dup__filter__sink.html", "classspdlog_1_1sinks_1_1dup__filter__sink" ],
        [ "hourly_filename_calculator", "structspdlog_1_1sinks_1_1hourly__filename__calculator.html", null ],
        [ "hourly_file_sink", "classspdlog_1_1sinks_1_1hourly__file__sink.html", "classspdlog_1_1sinks_1_1hourly__file__sink" ],
        [ "kafka_sink_config", "structspdlog_1_1sinks_1_1kafka__sink__config.html", "structspdlog_1_1sinks_1_1kafka__sink__config" ],
        [ "kafka_sink", "classspdlog_1_1sinks_1_1kafka__sink.html", "classspdlog_1_1sinks_1_1kafka__sink" ],
        [ "mongo_sink", "classspdlog_1_1sinks_1_1mongo__sink.html", "classspdlog_1_1sinks_1_1mongo__sink" ],
        [ "null_sink", "classspdlog_1_1sinks_1_1null__sink.html", "classspdlog_1_1sinks_1_1null__sink" ],
        [ "ostream_sink", "classspdlog_1_1sinks_1_1ostream__sink.html", "classspdlog_1_1sinks_1_1ostream__sink" ],
        [ "qt_sink", "classspdlog_1_1sinks_1_1qt__sink.html", "classspdlog_1_1sinks_1_1qt__sink" ],
        [ "qt_color_sink", "classspdlog_1_1sinks_1_1qt__color__sink.html", "classspdlog_1_1sinks_1_1qt__color__sink" ],
        [ "ringbuffer_sink", "classspdlog_1_1sinks_1_1ringbuffer__sink.html", "classspdlog_1_1sinks_1_1ringbuffer__sink" ],
        [ "rotating_file_sink", "classspdlog_1_1sinks_1_1rotating__file__sink.html", "classspdlog_1_1sinks_1_1rotating__file__sink" ],
        [ "sink", "classspdlog_1_1sinks_1_1sink.html", "classspdlog_1_1sinks_1_1sink" ],
        [ "stdout_sink_base", "classspdlog_1_1sinks_1_1stdout__sink__base.html", "classspdlog_1_1sinks_1_1stdout__sink__base" ],
        [ "stdout_sink", "classspdlog_1_1sinks_1_1stdout__sink.html", "classspdlog_1_1sinks_1_1stdout__sink" ],
        [ "stderr_sink", "classspdlog_1_1sinks_1_1stderr__sink.html", "classspdlog_1_1sinks_1_1stderr__sink" ],
        [ "syslog_sink", "classspdlog_1_1sinks_1_1syslog__sink.html", "classspdlog_1_1sinks_1_1syslog__sink" ],
        [ "systemd_sink", "classspdlog_1_1sinks_1_1systemd__sink.html", "classspdlog_1_1sinks_1_1systemd__sink" ],
        [ "tcp_sink_config", "structspdlog_1_1sinks_1_1tcp__sink__config.html", "structspdlog_1_1sinks_1_1tcp__sink__config" ],
        [ "tcp_sink", "classspdlog_1_1sinks_1_1tcp__sink.html", "classspdlog_1_1sinks_1_1tcp__sink" ],
        [ "udp_sink_config", "structspdlog_1_1sinks_1_1udp__sink__config.html", "structspdlog_1_1sinks_1_1udp__sink__config" ],
        [ "udp_sink", "classspdlog_1_1sinks_1_1udp__sink.html", "classspdlog_1_1sinks_1_1udp__sink" ],
        [ "wincolor_sink", "classspdlog_1_1sinks_1_1wincolor__sink.html", "classspdlog_1_1sinks_1_1wincolor__sink" ],
        [ "wincolor_stdout_sink", "classspdlog_1_1sinks_1_1wincolor__stdout__sink.html", "classspdlog_1_1sinks_1_1wincolor__stdout__sink" ],
        [ "wincolor_stderr_sink", "classspdlog_1_1sinks_1_1wincolor__stderr__sink.html", "classspdlog_1_1sinks_1_1wincolor__stderr__sink" ]
      ] ],
      [ "async_factory_impl", "structspdlog_1_1async__factory__impl.html", null ],
      [ "async_logger", "classspdlog_1_1async__logger.html", "classspdlog_1_1async__logger" ],
      [ "is_convertible_to_basic_format_string", "structspdlog_1_1is__convertible__to__basic__format__string.html", null ],
      [ "is_convertible_to_any_format_string", "structspdlog_1_1is__convertible__to__any__format__string.html", null ],
      [ "spdlog_ex", "classspdlog_1_1spdlog__ex.html", "classspdlog_1_1spdlog__ex" ],
      [ "source_loc", "structspdlog_1_1source__loc.html", "structspdlog_1_1source__loc" ],
      [ "file_event_handlers", "structspdlog_1_1file__event__handlers.html", "structspdlog_1_1file__event__handlers" ],
      [ "synchronous_factory", "structspdlog_1_1synchronous__factory.html", null ],
      [ "formatter", "classspdlog_1_1formatter.html", "classspdlog_1_1formatter" ],
      [ "logger", "classspdlog_1_1logger.html", "classspdlog_1_1logger" ],
      [ "custom_flag_formatter", "classspdlog_1_1custom__flag__formatter.html", "classspdlog_1_1custom__flag__formatter" ],
      [ "pattern_formatter", "classspdlog_1_1pattern__formatter.html", "classspdlog_1_1pattern__formatter" ],
      [ "stopwatch", "classspdlog_1_1stopwatch.html", "classspdlog_1_1stopwatch" ]
    ] ],
    [ "ansi_color_escape", "structansi__color__escape.html", "structansi__color__escape" ],
    [ "appender", "classappender.html", "classappender" ],
    [ "arg_converter", "classarg__converter.html", "classarg__converter" ],
    [ "arg_data", "structarg__data.html", "structarg__data" ],
    [ "arg_data< T, Char, NUM_ARGS, 0 >", "structarg__data_3_01_t_00_01_char_00_01_n_u_m___a_r_g_s_00_010_01_4.html", "structarg__data_3_01_t_00_01_char_00_01_n_u_m___a_r_g_s_00_010_01_4" ],
    [ "arg_formatter", "structarg__formatter.html", "structarg__formatter" ],
    [ "arg_mapper", "structarg__mapper.html", "structarg__mapper" ],
    [ "arg_ref", "structarg__ref.html", "structarg__ref" ],
    [ "AudioStream", "struct_audio_stream.html", "struct_audio_stream" ],
    [ "auto_id", "structauto__id.html", null ],
    [ "basic_cstring_view", "classbasic__cstring__view.html", "classbasic__cstring__view" ],
    [ "basic_data", "structbasic__data.html", null ],
    [ "basic_format_arg", "classbasic__format__arg.html", "classbasic__format__arg" ],
    [ "basic_format_args", "classbasic__format__args.html", "classbasic__format__args" ],
    [ "basic_format_context", "classbasic__format__context.html", "classbasic__format__context" ],
    [ "basic_format_parse_context", "classbasic__format__parse__context.html", "classbasic__format__parse__context" ],
    [ "basic_format_specs", "structbasic__format__specs.html", "structbasic__format__specs" ],
    [ "basic_format_string", "classbasic__format__string.html", "classbasic__format__string" ],
    [ "basic_fp", "structbasic__fp.html", "structbasic__fp" ],
    [ "basic_memory_buffer", "classbasic__memory__buffer.html", "classbasic__memory__buffer" ],
    [ "basic_ostream_formatter", "structbasic__ostream__formatter.html", "structbasic__ostream__formatter" ],
    [ "basic_printf_context", "classbasic__printf__context.html", "classbasic__printf__context" ],
    [ "basic_printf_parse_context", "classbasic__printf__parse__context.html", null ],
    [ "basic_runtime", "structbasic__runtime.html", "structbasic__runtime" ],
    [ "basic_string_view", "classbasic__string__view.html", "classbasic__string__view" ],
    [ "big_decimal_fp", "structbig__decimal__fp.html", "structbig__decimal__fp" ],
    [ "bigint", "classbigint.html", "classbigint" ],
    [ "BoneInfo", "struct_bone_info.html", "struct_bone_info" ],
    [ "BoundingBox", "struct_bounding_box.html", "struct_bounding_box" ],
    [ "buffer", "classbuffer.html", "classbuffer" ],
    [ "buffer_traits", "structbuffer__traits.html", "structbuffer__traits" ],
    [ "buffered_file", "classbuffered__file.html", "classbuffered__file" ],
    [ "bytes", "classbytes.html", "classbytes" ],
    [ "Camera2D", "struct_camera2_d.html", "struct_camera2_d" ],
    [ "Camera3D", "struct_camera3_d.html", "struct_camera3_d" ],
    [ "char_converter", "classchar__converter.html", "classchar__converter" ],
    [ "char_t_impl", "structchar__t__impl.html", null ],
    [ "char_t_impl< S, enable_if_t< is_string< S >::value > >", "structchar__t__impl_3_01_s_00_01enable__if__t_3_01is__string_3_01_s_01_4_1_1value_01_4_01_4.html", "structchar__t__impl_3_01_s_00_01enable__if__t_3_01is__string_3_01_s_01_4_1_1value_01_4_01_4" ],
    [ "CharInfo", "struct_char_info.html", "struct_char_info" ],
    [ "chrono_format_checker", "structchrono__format__checker.html", "structchrono__format__checker" ],
    [ "chrono_formatter", "structchrono__formatter.html", "structchrono__formatter" ],
    [ "Color", "struct_color.html", "struct_color" ],
    [ "color_type", "structcolor__type.html", "structcolor__type" ],
    [ "compile_parse_context", "classcompile__parse__context.html", "classcompile__parse__context" ],
    [ "compile_string", "structcompile__string.html", null ],
    [ "conjunction", "structconjunction.html", null ],
    [ "conjunction< P >", "structconjunction_3_01_p_01_4.html", null ],
    [ "conjunction< P1, Pn... >", "structconjunction_3_01_p1_00_01_pn_8_8_8_01_4.html", null ],
    [ "count_fractional_digits", "structcount__fractional__digits.html", null ],
    [ "count_fractional_digits< Num, Den, N, false >", "structcount__fractional__digits_3_01_num_00_01_den_00_01_n_00_01false_01_4.html", null ],
    [ "counting_buffer", "classcounting__buffer.html", "classcounting__buffer" ],
    [ "counting_iterator", "classcounting__iterator.html", "classcounting__iterator" ],
    [ "custom_formatter", "structcustom__formatter.html", "structcustom__formatter" ],
    [ "custom_value", "structcustom__value.html", "structcustom__value" ],
    [ "data", "structdata.html", null ],
    [ "default_arg_formatter", "structdefault__arg__formatter.html", "structdefault__arg__formatter" ],
    [ "digit_grouping", "classdigit__grouping.html", "classdigit__grouping" ],
    [ "disjunction", "structdisjunction.html", null ],
    [ "disjunction< P >", "structdisjunction_3_01_p_01_4.html", null ],
    [ "disjunction< P1, Pn... >", "structdisjunction_3_01_p1_00_01_pn_8_8_8_01_4.html", null ],
    [ "dynamic_format_arg_store", "classdynamic__format__arg__store.html", "classdynamic__format__arg__store" ],
    [ "dynamic_format_specs", "structdynamic__format__specs.html", "structdynamic__format__specs" ],
    [ "dynamic_formatter", "classdynamic__formatter.html", "classdynamic__formatter" ],
    [ "dynamic_specs_handler", "classdynamic__specs__handler.html", "classdynamic__specs__handler" ],
    [ "error_handler", "structerror__handler.html", "structerror__handler" ],
    [ "fallback_digit_grouping", "classfallback__digit__grouping.html", "classfallback__digit__grouping" ],
    [ "fallback_formatter", "structfallback__formatter.html", "structfallback__formatter" ],
    [ "FileManager", "struct_file_manager.html", "struct_file_manager" ],
    [ "fill_t", "structfill__t.html", "structfill__t" ],
    [ "find_escape_result", "structfind__escape__result.html", "structfind__escape__result" ],
    [ "fixed_buffer_traits", "classfixed__buffer__traits.html", "classfixed__buffer__traits" ],
    [ "float_specs", "structfloat__specs.html", "structfloat__specs" ],
    [ "Font", "struct_font.html", "struct_font" ],
    [ "format_arg_store", "classformat__arg__store.html", "classformat__arg__store" ],
    [ "format_decimal_result", "structformat__decimal__result.html", "structformat__decimal__result" ],
    [ "format_error", "classformat__error.html", "classformat__error" ],
    [ "format_int", "classformat__int.html", "classformat__int" ],
    [ "format_string_checker", "classformat__string__checker.html", "classformat__string__checker" ],
    [ "format_to_n_result", "structformat__to__n__result.html", "structformat__to__n__result" ],
    [ "formatter", "structformatter.html", "structformatter" ],
    [ "formatter< bytes >", "structformatter_3_01bytes_01_4.html", "structformatter_3_01bytes_01_4" ],
    [ "formatter< Char[N], Char >", "structformatter_3_01_char_0f_n_0e_00_01_char_01_4.html", "structformatter_3_01_char_0f_n_0e_00_01_char_01_4" ],
    [ "formatter< detail::bigint >", "structformatter_3_01detail_1_1bigint_01_4.html", "structformatter_3_01detail_1_1bigint_01_4" ],
    [ "formatter< detail::streamed_view< T >, Char >", "structformatter_3_01detail_1_1streamed__view_3_01_t_01_4_00_01_char_01_4.html", "structformatter_3_01detail_1_1streamed__view_3_01_t_01_4_00_01_char_01_4" ],
    [ "formatter< detail::styled_arg< T >, Char >", "structformatter_3_01detail_1_1styled__arg_3_01_t_01_4_00_01_char_01_4.html", "structformatter_3_01detail_1_1styled__arg_3_01_t_01_4_00_01_char_01_4" ],
    [ "formatter< group_digits_view< T > >", "structformatter_3_01group__digits__view_3_01_t_01_4_01_4.html", "structformatter_3_01group__digits__view_3_01_t_01_4_01_4" ],
    [ "formatter< join_view< It, Sentinel, Char >, Char >", "structformatter_3_01join__view_3_01_it_00_01_sentinel_00_01_char_01_4_00_01_char_01_4.html", "structformatter_3_01join__view_3_01_it_00_01_sentinel_00_01_char_01_4_00_01_char_01_4" ],
    [ "formatter< R, Char, enable_if_t< conjunction< bool_constant< range_format_kind< R, Char >::value !=range_format::disabled >, detail::is_formattable_delayed< R, Char > >::value > >", "structformatter_3_01_r_00_01_char_00_01enable__if__t_3_01conjunction_3_01bool__constant_3_01rang7f5d4717e46da784661cc5904a6b06c3.html", null ],
    [ "formatter< std::chrono::duration< Rep, Period >, Char >", "structformatter_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_00_01_char_01_4.html", "structformatter_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_00_01_char_01_4" ],
    [ "formatter< std::chrono::time_point< std::chrono::system_clock, Duration >, Char >", "structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4.html", "structformatter_3_01std_1_1chrono_1_1time__point_3_01std_1_1chrono_1_1system__clock_00_01_duration_01_4_00_01_char_01_4" ],
    [ "formatter< std::error_code, Char >", "structformatter_3_01std_1_1error__code_00_01_char_01_4.html", "structformatter_3_01std_1_1error__code_00_01_char_01_4" ],
    [ "formatter< std::thread::id, Char >", "structformatter_3_01std_1_1thread_1_1id_00_01_char_01_4.html", null ],
    [ "formatter< std::tm, Char >", "structformatter_3_01std_1_1tm_00_01_char_01_4.html", "structformatter_3_01std_1_1tm_00_01_char_01_4" ],
    [ "formatter< T, Char, enable_if_t< detail::type_constant< T, Char >::value !=detail::type::custom_type > >", "structformatter_3_01_t_00_01_char_00_01enable__if__t_3_01detail_1_1type__constant_3_01_t_00_01_ce66aa95d8f86570b04dc47971fbb1e4b.html", "structformatter_3_01_t_00_01_char_00_01enable__if__t_3_01detail_1_1type__constant_3_01_t_00_01_ce66aa95d8f86570b04dc47971fbb1e4b" ],
    [ "formatter< tuple_join_view< Char, T... >, Char >", "structformatter_3_01tuple__join__view_3_01_char_00_01_t_8_8_8_01_4_00_01_char_01_4.html", "structformatter_3_01tuple__join__view_3_01_char_00_01_t_8_8_8_01_4_00_01_char_01_4" ],
    [ "formatter< TupleT, Char, enable_if_t< fmt::is_tuple_like< TupleT >::value &&fmt::is_tuple_formattable< TupleT, Char >::value > >", "structformatter_3_01_tuple_t_00_01_char_00_01enable__if__t_3_01fmt_1_1is__tuple__like_3_01_tuple797f25cc01c29a62004a7da2d63b7b72.html", "structformatter_3_01_tuple_t_00_01_char_00_01enable__if__t_3_01fmt_1_1is__tuple__like_3_01_tuple797f25cc01c29a62004a7da2d63b7b72" ],
    [ "formatter< void *, Char >", "structformatter_3_01void_01_5_00_01_char_01_4.html", "structformatter_3_01void_01_5_00_01_char_01_4" ],
    [ "formatter< weekday, Char >", "structformatter_3_01weekday_00_01_char_01_4.html", "structformatter_3_01weekday_00_01_char_01_4" ],
    [ "Framework", "class_framework.html", "class_framework" ],
    [ "gen_digits_handler", "structgen__digits__handler.html", "structgen__digits__handler" ],
    [ "get_cstring", "structget__cstring.html", "structget__cstring" ],
    [ "get_locale", "classget__locale.html", "classget__locale" ],
    [ "Graphics", "class_graphics.html", "class_graphics" ],
    [ "group_digits_view", "structgroup__digits__view.html", "structgroup__digits__view" ],
    [ "has_format_as", "structhas__format__as.html", null ],
    [ "has_isfinite", "structhas__isfinite.html", null ],
    [ "has_isfinite< T, enable_if_t< sizeof(std::isfinite(T())) !=0 > >", "structhas__isfinite_3_01_t_00_01enable__if__t_3_01sizeof_07std_1_1isfinite_07_t_07_08_08_08_01_9_0a0_01_4_01_4.html", null ],
    [ "has_member_data_tm_gmtoff", "structhas__member__data__tm__gmtoff.html", null ],
    [ "has_member_data_tm_gmtoff< T, void_t< decltype(T::tm_gmtoff)> >", "structhas__member__data__tm__gmtoff_3_01_t_00_01void__t_3_01decltype_07_t_1_1tm__gmtoff_08_4_01_4.html", null ],
    [ "has_member_data_tm_zone", "structhas__member__data__tm__zone.html", null ],
    [ "has_member_data_tm_zone< T, void_t< decltype(T::tm_zone)> >", "structhas__member__data__tm__zone_3_01_t_00_01void__t_3_01decltype_07_t_1_1tm__zone_08_4_01_4.html", null ],
    [ "Image", "struct_image.html", "struct_image" ],
    [ "int_checker", "structint__checker.html", null ],
    [ "int_checker< true >", "structint__checker_3_01true_01_4.html", null ],
    [ "is_back_insert_iterator", "structis__back__insert__iterator.html", null ],
    [ "is_back_insert_iterator< std::back_insert_iterator< Container > >", "structis__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01_container_01_4_01_4.html", null ],
    [ "is_char", "structis__char.html", null ],
    [ "is_char< char >", "structis__char_3_01char_01_4.html", null ],
    [ "is_char< char16_t >", "structis__char_3_01char16__t_01_4.html", null ],
    [ "is_char< char32_t >", "structis__char_3_01char32__t_01_4.html", null ],
    [ "is_char< detail::char8_type >", "structis__char_3_01detail_1_1char8__type_01_4.html", null ],
    [ "is_char< wchar_t >", "structis__char_3_01wchar__t_01_4.html", null ],
    [ "is_compile_string", "structis__compile__string.html", null ],
    [ "is_contiguous", "structis__contiguous.html", null ],
    [ "is_contiguous< basic_memory_buffer< T, SIZE, Allocator > >", "structis__contiguous_3_01basic__memory__buffer_3_01_t_00_01_s_i_z_e_00_01_allocator_01_4_01_4.html", null ],
    [ "is_contiguous< std::basic_string< Char > >", "structis__contiguous_3_01std_1_1basic__string_3_01_char_01_4_01_4.html", null ],
    [ "is_contiguous_back_insert_iterator", "structis__contiguous__back__insert__iterator.html", null ],
    [ "is_contiguous_back_insert_iterator< appender >", "structis__contiguous__back__insert__iterator_3_01appender_01_4.html", null ],
    [ "is_contiguous_back_insert_iterator< std::back_insert_iterator< Container > >", "structis__contiguous__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01_container_01_4_01_4.html", null ],
    [ "is_integral", "structis__integral.html", null ],
    [ "is_integral< int128_opt >", "structis__integral_3_01int128__opt_01_4.html", null ],
    [ "is_integral< uint128_t >", "structis__integral_3_01uint128__t_01_4.html", null ],
    [ "is_named_arg", "structis__named__arg.html", null ],
    [ "is_named_arg< named_arg< Char, T > >", "structis__named__arg_3_01named__arg_3_01_char_00_01_t_01_4_01_4.html", null ],
    [ "is_output_iterator", "structis__output__iterator.html", null ],
    [ "is_output_iterator< It, T, void_t< typename std::iterator_traits< It >::iterator_category, decltype(*std::declval< It >()=std::declval< T >())> >", "structis__output__iterator_3_01_it_00_01_t_00_01void__t_3_01typename_01std_1_1iterator__traits_384cf523dd4e4d9030033492a363e38c5.html", null ],
    [ "is_range", "structis__range.html", null ],
    [ "is_statically_named_arg", "structis__statically__named__arg.html", null ],
    [ "is_string", "structis__string.html", null ],
    [ "is_tuple_formattable", "structis__tuple__formattable.html", null ],
    [ "is_tuple_like", "structis__tuple__like.html", null ],
    [ "is_zero_int", "classis__zero__int.html", "classis__zero__int" ],
    [ "iterator_buffer", "classiterator__buffer.html", "classiterator__buffer" ],
    [ "iterator_buffer< std::back_insert_iterator< Container >, enable_if_t< is_contiguous< Container >::value, typename Container::value_type > >", "classiterator__buffer_3_01std_1_1back__insert__iterator_3_01_container_01_4_00_01enable__if__t_3f9dd5967f8d169dc7f82f3e912e020ba.html", "classiterator__buffer_3_01std_1_1back__insert__iterator_3_01_container_01_4_00_01enable__if__t_3f9dd5967f8d169dc7f82f3e912e020ba" ],
    [ "iterator_buffer< T *, T >", "classiterator__buffer_3_01_t_01_5_00_01_t_01_4.html", "classiterator__buffer_3_01_t_01_5_00_01_t_01_4" ],
    [ "iterator_buffer< T *, T, fixed_buffer_traits >", "classiterator__buffer_3_01_t_01_5_00_01_t_00_01fixed__buffer__traits_01_4.html", "classiterator__buffer_3_01_t_01_5_00_01_t_00_01fixed__buffer__traits_01_4" ],
    [ "join_view", "structjoin__view.html", "structjoin__view" ],
    [ "locale_ref", "classlocale__ref.html", "classlocale__ref" ],
    [ "make_unsigned_or_bool", "structmake__unsigned__or__bool.html", null ],
    [ "make_unsigned_or_bool< bool >", "structmake__unsigned__or__bool_3_01bool_01_4.html", "structmake__unsigned__or__bool_3_01bool_01_4" ],
    [ "make_unsigned_or_unchanged", "structmake__unsigned__or__unchanged.html", "structmake__unsigned__or__unchanged" ],
    [ "make_unsigned_or_unchanged< T, true >", "structmake__unsigned__or__unchanged_3_01_t_00_01true_01_4.html", "structmake__unsigned__or__unchanged_3_01_t_00_01true_01_4" ],
    [ "Material", "struct_material.html", "struct_material" ],
    [ "MaterialMap", "struct_material_map.html", "struct_material_map" ],
    [ "Matrix", "struct_matrix.html", "struct_matrix" ],
    [ "Mesh", "struct_mesh.html", "struct_mesh" ],
    [ "Model", "struct_model.html", "struct_model" ],
    [ "ModelAnimation", "struct_model_animation.html", "struct_model_animation" ],
    [ "monostate", "structmonostate.html", "structmonostate" ],
    [ "Music", "struct_music.html", "struct_music" ],
    [ "named_arg", "structnamed__arg.html", "structnamed__arg" ],
    [ "named_arg_info", "structnamed__arg__info.html", "structnamed__arg__info" ],
    [ "named_arg_value", "structnamed__arg__value.html", "structnamed__arg__value" ],
    [ "NPatchInfo", "struct_n_patch_info.html", "struct_n_patch_info" ],
    [ "null_chrono_spec_handler", "structnull__chrono__spec__handler.html", "structnull__chrono__spec__handler" ],
    [ "precision_checker", "classprecision__checker.html", "classprecision__checker" ],
    [ "printf_arg_formatter", "classprintf__arg__formatter.html", "classprintf__arg__formatter" ],
    [ "printf_formatter", "structprintf__formatter.html", "structprintf__formatter" ],
    [ "printf_precision_handler", "classprintf__precision__handler.html", "classprintf__precision__handler" ],
    [ "printf_width_handler", "classprintf__width__handler.html", "classprintf__width__handler" ],
    [ "range_format_kind", "structrange__format__kind.html", null ],
    [ "range_formatter", "structrange__formatter.html", null ],
    [ "range_formatter< T, Char, enable_if_t< conjunction< std::is_same< T, remove_cvref_t< T > >, disjunction< is_formattable< T, Char >, detail::has_fallback_formatter< T, Char > > >::value > >", "structrange__formatter_3_01_t_00_01_char_00_01enable__if__t_3_01conjunction_3_01std_1_1is__same_536f73f090b177cf0b0b66b0cacb6cc1.html", "structrange__formatter_3_01_t_00_01_char_00_01enable__if__t_3_01conjunction_3_01std_1_1is__same_536f73f090b177cf0b0b66b0cacb6cc1" ],
    [ "Ray", "struct_ray.html", "struct_ray" ],
    [ "RayHitInfo", "struct_ray_hit_info.html", "struct_ray_hit_info" ],
    [ "Rectangle", "struct_rectangle.html", "struct_rectangle" ],
    [ "RenderTexture", "struct_render_texture.html", "struct_render_texture" ],
    [ "rgb", "structrgb.html", "structrgb" ],
    [ "Shader", "struct_shader.html", "struct_shader" ],
    [ "Sound", "struct_sound.html", "struct_sound" ],
    [ "specs_checker", "classspecs__checker.html", "classspecs__checker" ],
    [ "specs_handler", "classspecs__handler.html", "classspecs__handler" ],
    [ "specs_setter", "classspecs__setter.html", "classspecs__setter" ],
    [ "Sprite", "class_sprite.html", "class_sprite" ],
    [ "std_string_view", "structstd__string__view.html", null ],
    [ "string_value", "structstring__value.html", "structstring__value" ],
    [ "strip_named_arg", "structstrip__named__arg.html", "structstrip__named__arg" ],
    [ "strip_named_arg< T, true >", "structstrip__named__arg_3_01_t_00_01true_01_4.html", "structstrip__named__arg_3_01_t_00_01true_01_4" ],
    [ "styled_arg", "structstyled__arg.html", "structstyled__arg" ],
    [ "tagBITMAPINFOHEADER", "structtag_b_i_t_m_a_p_i_n_f_o_h_e_a_d_e_r.html", "structtag_b_i_t_m_a_p_i_n_f_o_h_e_a_d_e_r" ],
    [ "text_style", "classtext__style.html", "classtext__style" ],
    [ "Texture", "struct_texture.html", "struct_texture" ],
    [ "thousands_sep_result", "structthousands__sep__result.html", "structthousands__sep__result" ],
    [ "tm_format_checker", "structtm__format__checker.html", "structtm__format__checker" ],
    [ "tm_writer", "classtm__writer.html", "classtm__writer" ],
    [ "Transform", "struct_transform.html", "struct_transform" ],
    [ "tuple_join_view", "structtuple__join__view.html", "structtuple__join__view" ],
    [ "type_constant", "structtype__constant.html", null ],
    [ "type_identity", "structtype__identity.html", "structtype__identity" ],
    [ "unformattable", "structunformattable.html", null ],
    [ "unformattable_char", "structunformattable__char.html", null ],
    [ "unformattable_const", "structunformattable__const.html", null ],
    [ "unformattable_pointer", "structunformattable__pointer.html", null ],
    [ "utf8_to_utf16", "classutf8__to__utf16.html", "classutf8__to__utf16" ],
    [ "value", "classvalue.html", "classvalue" ],
    [ "Vector2", "struct_vector2.html", "struct_vector2" ],
    [ "Vector3", "struct_vector3.html", "struct_vector3" ],
    [ "Vector4", "struct_vector4.html", "struct_vector4" ],
    [ "view", "structview.html", null ],
    [ "VrDeviceInfo", "struct_vr_device_info.html", "struct_vr_device_info" ],
    [ "VrStereoConfig", "struct_vr_stereo_config.html", "struct_vr_stereo_config" ],
    [ "Wave", "struct_wave.html", "struct_wave" ],
    [ "weekday", "classweekday.html", "classweekday" ],
    [ "width_checker", "classwidth__checker.html", "classwidth__checker" ],
    [ "write_int_arg", "structwrite__int__arg.html", "structwrite__int__arg" ],
    [ "write_int_data", "structwrite__int__data.html", "structwrite__int__data" ],
    [ "year_month_day", "classyear__month__day.html", null ]
];